package kappalekirjasto.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import java.util.*;
import kappalekirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2018.07.26 08:55:34 // Generated by ComTest
 *
 */
public class KappalekirjastoTest {



  // Generated by ComTest BEGIN
  /** testAnnaVersiot48 */
  @Test
  public void testAnnaVersiot48() {    // Kappalekirjasto: 48
    Kappalekirjasto kappalekirjasto = new Kappalekirjasto(); 
    Kappale kappale1 = new Kappale(), kappale2 = new Kappale(), kappale3 = new Kappale(); 
    kappale1.rekisteroi(); kappale2.rekisteroi(); kappale3.rekisteroi(); 
    int id1 = kappale1.getID(); 
    int id2 = kappale2.getID(); 
    Versio a1 = new Versio(id1); kappalekirjasto.lisaa(a1); 
    Versio b1 = new Versio(id1); kappalekirjasto.lisaa(b1); 
    Versio a2 = new Versio(id2); kappalekirjasto.lisaa(a2); 
    Versio b2 = new Versio(id2); kappalekirjasto.lisaa(b2); 
    Versio c2 = new Versio(id2); kappalekirjasto.lisaa(c2); 
    Versio d2 = new Versio(id2); kappalekirjasto.lisaa(d2); 
    List<Versio> loytyneet; 
    loytyneet = kappalekirjasto.annaVersiot(kappale3); 
    assertEquals("From: Kappalekirjasto line: 65", 0, loytyneet.size()); 
    loytyneet = kappalekirjasto.annaVersiot(kappale1); 
    assertEquals("From: Kappalekirjasto line: 67", 2, loytyneet.size()); 
    assertEquals("From: Kappalekirjasto line: 68", true, loytyneet.get(0) == a1); 
    assertEquals("From: Kappalekirjasto line: 69", true, loytyneet.get(1) == b1); 
    loytyneet = kappalekirjasto.annaVersiot(kappale2); 
    assertEquals("From: Kappalekirjasto line: 71", 4, loytyneet.size()); 
    assertEquals("From: Kappalekirjasto line: 72", true, loytyneet.get(0) == a2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa92 */
  @Test
  public void testLisaa92() {    // Kappalekirjasto: 92
    Kappalekirjasto kappalekirjasto = new Kappalekirjasto(); 
    assertEquals("From: Kappalekirjasto line: 94", 0, kappalekirjasto.getKappaleita()); 
    Kappale a = new Kappale(); 
    Kappale b = new Kappale(); 
    kappalekirjasto.lisaa(a); assertEquals("From: Kappalekirjasto line: 97", 1, kappalekirjasto.getKappaleita()); 
    kappalekirjasto.lisaa(b); assertEquals("From: Kappalekirjasto line: 98", 2, kappalekirjasto.getKappaleita()); 
    assertEquals("From: Kappalekirjasto line: 99", a, kappalekirjasto.annaKappale(0)); 
    assertEquals("From: Kappalekirjasto line: 100", b, kappalekirjasto.annaKappale(1)); 
    assertEquals("From: Kappalekirjasto line: 101", false, kappalekirjasto.annaKappale(0) == b); 
    kappalekirjasto.lisaa(a); assertEquals("From: Kappalekirjasto line: 102", 3, kappalekirjasto.getKappaleita()); 
    try {
    kappalekirjasto.annaKappale(3); 
    fail("Kappalekirjasto: 103 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    kappalekirjasto.lisaa(a); assertEquals("From: Kappalekirjasto line: 104", 4, kappalekirjasto.getKappaleita()); 
    kappalekirjasto.lisaa(b); assertEquals("From: Kappalekirjasto line: 105", 5, kappalekirjasto.getKappaleita()); 
    kappalekirjasto.lisaa(a); 
  } // Generated by ComTest END
}